import React, { useMemo } from 'react';
import { ThemeContext, buildThemeContext, buildCustomProperties, } from '../../utilities/theme';
import { themeProvider } from '../shared';
import { useFeatures } from '../../utilities/features';
export function ThemeProvider({ theme: themeConfig, children, }) {
    const { unstableGlobalTheming = false } = useFeatures();
    const theme = useMemo(() => buildThemeContext(themeConfig), [themeConfig]);
    const customProperties = useMemo(() => buildCustomProperties(themeConfig, unstableGlobalTheming), [unstableGlobalTheming, themeConfig]);
    return (<ThemeContext.Provider value={theme}>
      <div style={customProperties} {...themeProvider.props}>
        {children}
      </div>
    </ThemeContext.Provider>);
}
